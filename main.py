import praw
import time
from datetime import datetime

import json
import imgkit
import pprint
from helpers import get_config

config = get_config()
config.read('auth.ini')
client_id = config.get('bot', 'client_id')
client_secret=config.get('bot', 'client_secret')
username=config.get('bot', 'username')
password=config.get('bot', 'password')
user_agent=config.get('bot', 'user_agent')

reddit = praw.Reddit(
    client_id=client_id,
    client_secret=client_secret,
    username=username,
    password=password,
    user_agent=user_agent,
)

param = 2
def get_price(award):
    return award.get('coin_price')
def human_format(num):
    magnitude = 0
    while abs(num) >= 1000:
        magnitude += 1
        num /= 1000.0
    # add more suffixes if you need them
    return '%.0f%s' % (num, ['', 'K', 'M', 'G', 'T', 'P'][magnitude])

def getCommentHtml(call, index):
	#dir(object)
	comment = call.parent()
	usericon = comment.author.icon_img
	username = comment.author
	isop = ''
	if comment.is_submitter == True:
		isop = """<span class="isop">OP</span>"""

	datec = datetime.fromtimestamp(comment.created_utc)
	isedited = comment.edited
	edited = ""
	if isedited:
		edited = """<i class="isedited"> edited %s</i>"""%(datetime.fromtimestamp(isedited))
	json_object = json.dumps(comment.all_awardings, indent = 4)  
	#print(json_object)
	awardcount = 0
	awardcount2 = 0
	awardings = comment.all_awardings 
	awardings.sort(key=get_price, reverse=True)

	moreAwardsHTML = ""
	awardsHTML = ""
	if len(awardings) > 0:
		iterator = 0
		for i in awardings:
			awardcount = awardcount + i['count']
			#print( i['coin_price'], i['resized_icons'][1]['url'], i['count'], end='\n\n')
			if iterator < 3:
				awardcount2 = awardcount2 + i['count']
				awardtemplate = """
					<span class="award" >
		              <img
		                alt="award-name"
		                src="%s"
		              />
		              <span class="awardcount">%s</span>
		            </span>
				"""%(i['resized_icons'][1]['url'], i['count'])
				awardsHTML = awardsHTML + awardtemplate
			iterator = iterator + 1
	
	if awardcount != awardcount2:
		moreAwardsHTML = """
			<i class="moreawards">& %s more</i>
		"""%(awardcount)
	#print('Total Award => ', awardcount)
	body = comment.body_html
	score = human_format(comment.score)

	
	commentTemplate = """
		<div class="comment">
		  <div class="block-comment" style="padding-left:%spx">
		    <div class="comment-user-info">
		      <div class="comment-user-img">
		        <img src="%s" alt="" />
		      </div>
		      <span class="username">%s</span>
		      %s

		      <span class="date"> - %s -</span>
		      %s

		      <div class="awards">
		        %s
		        %s
		      </div>
		    </div>
		    <div class="comment-content">
		      %s

		      <div class="comment-bottom">
		        <div class="vote-arrows">
		          <button>
		              <!-- Generated by IcoMoon.io -->
		              <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024">
		                <title></title>
		                <g id="icomoon-ignore">
		                </g>
		                <path d="M665.6 979.2h-307.2c-31.788-0.058-57.542-25.812-57.6-57.594v-352.62h-192.051c-0.003 0-0.006 0-0.009 0-31.812 0-57.6-25.788-57.6-57.6 0-14.851 5.62-28.389 14.85-38.604l-0.045 0.050 403.302-447.59c10.83-11.18 25.981-18.12 42.752-18.12s31.922 6.94 42.737 18.104l0.015 0.016 403.405 447.693c9.213 10.171 14.852 23.73 14.852 38.605 0 31.777-25.732 57.544-57.496 57.6l-192.313 0.41v352.051c-0.058 31.788-25.812 57.542-57.594 57.6h-0.006zM364.8 915.2h294.4v-409.6l241.869-0.512-389.069-431.667-389.12 431.565h241.92zM516.71 68.147v0z"></path>
		            </span>
		          </button>
		          <div class="votecount">%s</div>
		          <button>
		              <!-- Generated by IcoMoon.io -->
		              <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024">
		                <title></title>
		                <g id="icomoon-ignore1">
		                </g>
		                <path d="M512 1017.754c-0.008 0-0.017 0-0.026 0-16.929 0-32.151-7.31-42.682-18.946l-0.044-0.049-403.405-447.693c-9.213-10.171-14.852-23.73-14.852-38.605 0-31.777 25.732-57.544 57.496-57.6l192.313-0.41v-352.051c0.058-31.788 25.812-57.542 57.594-57.6h307.206c31.788 0.058 57.542 25.812 57.6 57.594v352.62h192.051c0.003 0 0.006 0 0.009 0 31.812 0 57.6 25.788 57.6 57.6 0 14.851-5.62 28.389-14.85 38.604l0.045-0.050-403.302 447.59c-10.574 11.685-25.796 18.995-42.726 18.995-0.009 0-0.019 0-0.028 0h0.001zM507.29 955.802v0zM122.88 518.861l389.12 431.718 389.12-431.565h-241.92v-410.214h-294.4v409.6z"></path>
		              </svg>
		          </button>
		        </div>
		      </div>

		    </div>
		  </div>
		</div>
	"""%((index + 1)* 21, usericon,username,isop,datec,edited,awardsHTML,moreAwardsHTML, body,score)
	return commentTemplate

def commentsnapbot():
	keyWords = ['!snapshot','!snapshotbot','!commentsnapshot','!commentsnapshotbot']
	print("started")
	count = 0

	# comment = reddit.comment("h6cnx2s")
	# HTML = getCommentHtml(comment,0)
	# totalcomment = 1
	# commentindex = 0
	# commentwidth = 600
	# pagewidth = commentwidth + (totalcomment*21*2) + 40


	'''
		To include submission => "selftext" ?= "preview['images']['resolutions'][3].url" + "['title']" + "['score']" + "['all_awardings']" + "num_comments"
	'''
	submission = reddit.submission(id="oqup6m")
	print(submission.title)  # to make it non-lazy
	pprint.pprint(vars(submission))
	#options = {
	#    'crop-w': pagewidth,
	#}
	#css = ['commentstyle.css']
	#imgkit.from_string(HTML, 'out.jpg', options,css=css)
	return
=======
reddit = praw.Reddit(
    client_id=" ",
<<<<<<< HEAD
    client_secret="",
    username="commentshotbot",
    password="",
=======
    client_secret=" ",
    username="commentshotbot",
    password=" ",
>>>>>>> fd9db7f2e4271dacf3912900e86b068a9cf096ca
    user_agent="Desktop:(by github.com/ouzkagan):Reddit Comment Snapshot Bot",
)

param = 2
def commentsnapbot():
	keyWords = ['example']
	print("started")
	count = 0
>>>>>>> 03b867da9d12495e8ed8e512c9af72c253195a7c
	while True:
		time.sleep(1)
		# Checks each comment in the generated stream of new comments
		# Skips bot calls that were made before the bot was running
		#for comment in reddit.subreddit('redditdev').stream.comments(limit=None):
<<<<<<< HEAD
		for comment in reddit.subreddit('announcements').comments(limit=None):
			count = count + 1
			for keyWord in keyWords:
				if (keyWord in comment.body):
					#print(str(comment.body_html) + ' by ' + str(comment.author))
					#if(comment.parent().id.startswith('t3')):

					if(comment.parent().id):
						print(comment.parent().author.icon_img)
						print(comment.parent().author)
						print(comment.parent().is_submitter)
						print(comment.parent().created_utc)
						print(comment.parent().edited)
						awardcount = {}
						print(comment.parent().all_awardings)
						for i in comment.parent().all_awardings:
							#print(i['resized_icons'][1]['url'])
							pass
						print(comment.parent().body_html)


					else:
						print(comment.submission)
					print('\n\n')
commentsnapbot()
=======
		for comment in reddit.subreddit('redditdev').comments(limit=None):
			count = count + 1

			for keyWord in keyWords:
				if (keyWord in comment.body):
					print(str(comment.body_html) + ' by ' + str(comment.author))
					if(comment.parent().id.startswith('t3')):
						print(comment.parent().body_html)

					else:
						print(comment.submission)
					print('\n\n')

			if(count == 3):
				break
commentsnapbot()
>>>>>>> 03b867da9d12495e8ed8e512c9af72c253195a7c
